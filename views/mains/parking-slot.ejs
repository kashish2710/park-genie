<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Parking Slot Availability</title>
    <style>
        .block {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            padding: 10px;
        }
        .slot {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            width: 80px;
            height: 80px;
            border: 1px solid black;
            text-align: center;
            padding: 5px;
        }
        .available {
            background-color: lightgreen;
        }
        .occupied {
            background-color: red;
        }
        button {
            margin-top: 5px;
            cursor: pointer;
            padding: 5px;
            border: none;
            color: white;
            border-radius: 5px;
        }
        .check-btn {
            background-color: orange;
        }
        .check-btn:hover {
            background-color: darkorange;
        }
        .book-btn {
            background-color: blue;
        }
        .book-btn:hover {
            background-color: darkblue;
        }
    </style>
</head>
<body>
    <h1>Parking Slot Availability</h1>
   
    <div id="block-name">
        <div>Block A</div>
        <div>Block B</div>
    </div>
     
    <div id="parking-slot">
        <div class="block" id="BLOCKA"></div>
        <div class="block" id="BLOCKB"></div>
    </div>

    <script>
        const parkingMatrix = [
            [0, 1, 0, 0, 1],
            [1, 0, 0, 1, 1],
            [0, 0, 1, 1, 0],
            [0, 0, 1, 1, 0],
        ];
        const parkingB = [
            [1, 1, 0, 1, 0],
            [0, 1, 1, 1, 1],
            [1, 0, 1, 1, 0],
            [0, 0, 0, 1, 0],
        ];

        function renderParkingLot(matrix, containerId, blockName) {
            const parkingLot = document.getElementById(containerId);
            parkingLot.innerHTML = ""; // Clear previous content

            matrix.forEach((row, i) => {
                row.forEach((slot, j) => {
                    const div = document.createElement("div");
                    div.classList.add("slot", slot ? "occupied" : "available");

                    const slotText = document.createElement("span");
                    const slotId = `${blockName}${i + 1}${j + 1}`;
                    slotText.textContent = slotId;
                    div.appendChild(slotText);

                    const button = document.createElement("button");
                    button.textContent = slot === 1 ? "Check" : "Book";
                    button.classList.add(slot === 1 ? "check-btn" : "book-btn");

                    // Use addEventListener for better event handling
                    button.addEventListener("click", function() {
                        if (slot === 0) {
                            window.open("/index", "_blank");  // Open in a new tab
                        } else {
                            alert(`Checking slot: ${slotId}`);
                        }
                    });

                    div.appendChild(button);
                    parkingLot.appendChild(div);
                });
            });
        }

        renderParkingLot(parkingMatrix, "BLOCKA", "A");
        renderParkingLot(parkingB, "BLOCKB", "B");
    </script>
</body>
</html> -->
<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Parking Slot Availability</title>
    <style>
        .block {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            padding: 10px;
        }
        .slot {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            width: 80px;
            height: 80px;
            border: 1px solid black;
            text-align: center;
            padding: 5px;
        }
        .available {
            background-color: lightgreen;
        }
        .occupied {
            background-color: red;
        }
        button {
            margin-top: 5px;
            cursor: pointer;
            padding: 5px;
            border: none;
            color: white;
            border-radius: 5px;
        }
        .check-btn {
            background-color: orange;
        }
        .check-btn:hover {
            background-color: darkorange;
        }
        .book-btn {
            background-color: blue;
        }
        .book-btn:hover {
            background-color: darkblue;
        }
    </style>
</head>
<body>
    <h1>Parking Slot Availability</h1>
   
    <div id="block-name">
        <div>Block A</div>
        <div>Block B</div>
    </div>
     
    <div id="parking-slot">
        <% slots.forEach(slot => { %>
            <div class="slot <%= slot.isBooked ? 'occupied' : 'available' %>">
                <span><%= slot.slotNumber %></span>
                <% if (!slot.isBooked) { %>
                    <form action="/index" method="POST">
                        <input type="hidden" name="slotNumber" value="<%= slot.slotNumber %>">
                        <button type="submit" class="book-btn">Book</button>
                    </form>
                <% } else { %>
                    <button class="check-btn">Booked</button>
                <% } %>
            </div>
        <% }); %>
    </div>
</body>
</html> -->
<body>
    <h1>Parking Slot Availability</h1>

    <div id="block-name">
    </div>
     
    <div id="parking-slot">
        <% if (slots.length === 0) { %>
            <p>No slots available.</p>
        <% } else { %>
            <% slots.forEach(slot => { %>
                <div class="slot <%= slot.isBooked ? 'occupied' : 'available' %>">
                    <span><%= slot.slotNumber %></span>
                    <span id="time-left-<%= slot.slotNumber %>">
                        <% if (slot.isBooked) { %>
                            <span class="time-left" id="time-left-<%= slot.slotNumber %>">Loading...</span>
                        <% } %>
                    </span>
                    <% if (!slot.isBooked) { %>
                        <form action="/next" method="POST">
                            <input type="hidden" name="slotNumber" value="<%= slot.slotNumber %>">
                            <button type="submit" class="book-btn">Book</button>
                        </form>
                    <% } else { %>
                        
                    <%}%>
                </div>
            <% }); %>
        <% } %>
    </div>
</body>
<script>
    async function updateSlotTimes() {
        const slotElements = document.querySelectorAll(".slot");
    
        for (let slot of slotElements) {
            const slotNumber = slot.querySelector("span").innerText.trim();
            const timeLeftElement = document.getElementById(`time-left-${slotNumber}`);
    
            if (!timeLeftElement) continue; // Skip unbooked slots
    
            try {
                const response = await fetch("/check-slot", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ slotNumber })
                });
    
                const result = await response.json();
                if (result.success) {
                    timeLeftElement.innerHTML = `Available in <br> <div class="result-time">${result.timeLeft}</div>`;
                }
            } catch (error) {
                console.error(`Error updating slot ${slotNumber}:`, error);
            }
        }
    }
    
    // Update every 10 seconds automatically
    setInterval(updateSlotTimes, 10000);
    updateSlotTimes(); // Run once on page load
    </script>

<style>
/* Overall page styling */
body {
    font-family: 'Poppins', sans-serif;
    background-color: #fdeff2; /* Softer pastel pink */
    color: #333;
    text-align: center;
    padding: 20px;
}

/* Heading */
h1 {
    color: #c2185b; /* Deep rose pink */
    font-size: 26px;
    margin-bottom: 20px;
}

/* Parking slots container */
#parking-slot {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(140px, 1fr)); /* Responsive grid */
    gap: 60px;
    max-width: 100vw;
    margin: 20px auto;
    padding: 20px;
}
.result-time{
    color:#c2185b;
}
/* Individual slot styling */
.slot {
    width: 140px;
    height: 140px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    padding: 10px;
    font-size: 16px;
    font-weight: bold;
    border-radius: 12px;
    transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    position: relative;
    cursor: pointer;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Slot hover effect */
.slot:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
}

/* Available (Darker Mint Green) */
.available {
    background-color: #71ada9; /* Rich teal green */
    color: white;
}

/* Occupied (Lighter Blush Pink) */
.occupied {
    background-color: #f2a4b9; /* Softer blush pink */
    color: white;
}

/* Slot number styling */
.slot span {
    font-size: 18px;
    font-weight: bold;
    margin-bottom: 6px;
}

/* Time left styling (Prominent) */
.time-left {
    display: block;
    font-size: 13px;
    font-weight: bold;
    color: #c2185b; /* Deep purple for contrast */
    margin-top: 4px;
    padding: 5px 8px;
    background: #fce4ec; /* Light pastel pink */
    border-radius: 6px;
    text-align: center;
    width: 90%;
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* Button styling */
.book-btn {
    background-color:  #f2a4b9; /* Soft pink */
    color: white;
    padding: 8px 12px;
    border: none;
    font-size: 14px;
    font-weight: bold;
    border-radius: 8px;
    cursor: pointer;
    transition: background 0.3s ease-in-out;
    width: 90%;
    text-align: center;
}

/* Button hover effect */
.book-btn:hover {
    background-color: #d81b60;
}

/* Center form elements */
.slot form {
    width: 100%;
    display: flex;
    justify-content: center;
}


</style>

<!-- </style> --> 